services:
  postgres:
    image: postgres:16
    container_name: postgres
    env_file: env/postgres.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 15
    networks:
      - ecommerce-net

  app: &app_config
    container_name: ecommerce-app-v2
    build:
      context: .
      dockerfile: Dockerfile
    env_file: env/app.env
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - ecommerce-net

  app2:
    <<: *app_config
    container_name: ecommerce-app-v3
    env_file: env/app2.env
    ports:
      - "8082:8080"

  redis:
    image: redis:7.2.4
    container_name: redis
    restart: unless-stopped
    networks:
      - ecommerce-net

  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - ecommerce-net

volumes:
  postgres-data:

networks:
  ecommerce-net:
    driver: bridge